schema
  @auth(
    providers: [
      {
        type: oidc
        issuer: "https://accounts.google.com"
        clientId: "{{ env.GOOGLE_CLIENT_ID }}"
      }
    ]
    rules: [{ allow: owner }]
  ) {
  query: Query
}

extend type Mutation {
  checkout(input: CheckoutSessionInput!): CheckoutSession!
    @resolver(name: "checkout")
}

input CheckoutSessionInput {
  lineItems: [CheckoutLineItem]
}

input CheckoutLineItem {
  price: String!
  quantity: Int!
}

type CheckoutSession {
  url: String!
}

# TODO: not used yet, use it for user profile pages
# to show public todos of users
type User @model {
  username: String! @unique
}

type Todo @model {
  title: String!
  done: Boolean! @default(value: false)
  starred: Boolean! @default(value: false)
  priority: Int! @default(value: 0)
  note: String
  dueDate: String
  subtasks: [Subtask]
}

type Subtask @model {
  title: String!
  done: Boolean! @default(value: false)
  starred: Boolean! @default(value: false)
  priority: Int! @default(value: 0)
  note: String
  dueDate: String
}

type Settings @model {
  hideActionBar: Boolean! @default(value: false)
  iconOnlySidebar: Boolean! @default(value: false)
  openAiGptModel: Int! @default(value: 3) # 3 or 4
  gpt3MonthlyTokensUsed: Int
  gpt4MonthlyTokensUsed: Int
}
