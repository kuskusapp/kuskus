schema
  @auth(
    providers: [
      {
        type: oidc
        issuer: "https://accounts.google.com"
        clientId: "{{ env.GOOGLE_CLIENT_ID }}"
      }
    ]
    rules: [{ allow: owner }]
  ) {
  query: Query
}

extend type Query {
  suggestions(task: String!): SuggestionsPayload @resolver(name: "suggestions")
}

type SuggestionsPayload {
  suggestedTasks: suggestedTasks
  stripeCheckoutUrl: String
}

type SuggestedTasks {
  intro: String
  tasks: [SuggestedTask]!
}

type SuggestedTask {
  task: String!
  note: String
}

type UserDetails @model {
  paidSubscriptionValidUntilDate: Date
  username: String # set by a user, this will be a route to show public todos TODO: if unique, it can't be null, solve this :(
  aiTasksAvailable: Int @default(value: 5) # times user can use gpt-3 AI suggestions
  # gpt3MonthlyTokensUsed: Int # how many gpt-3 tokens user used this month (for billing)
  # gpt4MonthlyTokensUsed: Int # how many gpt-4 tokens user used this month (for billing)
}

type Settings @model {
  hideActionBar: Boolean! @default(value: false)
  iconOnlySidebar: Boolean! @default(value: false)
  languageModelUsed: String! @default(value: "gpt-3") # gpt-3 | gpt-4 | llama
}

type Todo @model {
  title: String!
  done: Boolean! @default(value: false)
  starred: Boolean! @default(value: false)
  priority: Int! @default(value: 0)
  note: String
  dueDate: String
  subtasks: [Subtask]
  labels: [String]
  cached: String # 'gpt-3' | 'gpt-4'
}

type Subtask @model {
  title: String!
  done: Boolean! @default(value: false)
  starred: Boolean! @default(value: false)
  priority: Int! @default(value: 0)
  note: String
  dueDate: String
  cached: String # 'gpt-3' | 'gpt-4'
}
